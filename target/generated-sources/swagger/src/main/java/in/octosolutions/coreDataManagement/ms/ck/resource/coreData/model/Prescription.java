/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.MedicineDetails;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.Patient;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.PatientType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Prescription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-09T21:54:17.090+05:30")
public class Prescription {
  @SerializedName("id")
  private String id = null;

  @SerializedName("relatedPrescriptions")
  private List<byte[]> relatedPrescriptions = null;

  @SerializedName("doctorId")
  private String doctorId = null;

  @SerializedName("patient")
  private Patient patient = null;

  @SerializedName("departmentId")
  private String departmentId = null;

  @SerializedName("hospitalId")
  private String hospitalId = null;

  @SerializedName("referredBy")
  private String referredBy = null;

  @SerializedName("patientType")
  private PatientType patientType = null;

  @SerializedName("medicalHistory")
  private String medicalHistory = null;

  @SerializedName("diseaseSymptoms")
  private String diseaseSymptoms = null;

  @SerializedName("clinicalFindings")
  private String clinicalFindings = null;

  @SerializedName("diagnosis")
  private String diagnosis = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("conductedProcedure")
  private String conductedProcedure = null;

  @SerializedName("medicines")
  private List<MedicineDetails> medicines = null;

  @SerializedName("prescribedLabTest")
  private String prescribedLabTest = null;

  @SerializedName("adviceGiven")
  private String adviceGiven = null;

  @SerializedName("followUpDate")
  private String followUpDate = null;

  @SerializedName("prescription")
  private byte[] prescription = null;

  public Prescription id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id of Particular Prescription  
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Id of Particular Prescription  ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Prescription relatedPrescriptions(List<byte[]> relatedPrescriptions) {
    this.relatedPrescriptions = relatedPrescriptions;
    return this;
  }

  public Prescription addRelatedPrescriptionsItem(byte[] relatedPrescriptionsItem) {
    if (this.relatedPrescriptions == null) {
      this.relatedPrescriptions = new ArrayList<>();
    }
    this.relatedPrescriptions.add(relatedPrescriptionsItem);
    return this;
  }

   /**
   * Get relatedPrescriptions
   * @return relatedPrescriptions
  **/
  @ApiModelProperty(value = "")
  public List<byte[]> getRelatedPrescriptions() {
    return relatedPrescriptions;
  }

  public void setRelatedPrescriptions(List<byte[]> relatedPrescriptions) {
    this.relatedPrescriptions = relatedPrescriptions;
  }

  public Prescription doctorId(String doctorId) {
    this.doctorId = doctorId;
    return this;
  }

   /**
   * id of the doctor 
   * @return doctorId
  **/
  @ApiModelProperty(required = true, value = "id of the doctor ")
  public String getDoctorId() {
    return doctorId;
  }

  public void setDoctorId(String doctorId) {
    this.doctorId = doctorId;
  }

  public Prescription patient(Patient patient) {
    this.patient = patient;
    return this;
  }

   /**
   * Get patient
   * @return patient
  **/
  @ApiModelProperty(value = "")
  public Patient getPatient() {
    return patient;
  }

  public void setPatient(Patient patient) {
    this.patient = patient;
  }

  public Prescription departmentId(String departmentId) {
    this.departmentId = departmentId;
    return this;
  }

   /**
   * id of the doctor&#39;s department(though it might not be needed) 
   * @return departmentId
  **/
  @ApiModelProperty(value = "id of the doctor's department(though it might not be needed) ")
  public String getDepartmentId() {
    return departmentId;
  }

  public void setDepartmentId(String departmentId) {
    this.departmentId = departmentId;
  }

  public Prescription hospitalId(String hospitalId) {
    this.hospitalId = hospitalId;
    return this;
  }

   /**
   * id of the hospital(though it might not be needed) 
   * @return hospitalId
  **/
  @ApiModelProperty(value = "id of the hospital(though it might not be needed) ")
  public String getHospitalId() {
    return hospitalId;
  }

  public void setHospitalId(String hospitalId) {
    this.hospitalId = hospitalId;
  }

  public Prescription referredBy(String referredBy) {
    this.referredBy = referredBy;
    return this;
  }

   /**
   * if patient is referred by any other doctor 
   * @return referredBy
  **/
  @ApiModelProperty(value = "if patient is referred by any other doctor ")
  public String getReferredBy() {
    return referredBy;
  }

  public void setReferredBy(String referredBy) {
    this.referredBy = referredBy;
  }

  public Prescription patientType(PatientType patientType) {
    this.patientType = patientType;
    return this;
  }

   /**
   * Get patientType
   * @return patientType
  **/
  @ApiModelProperty(required = true, value = "")
  public PatientType getPatientType() {
    return patientType;
  }

  public void setPatientType(PatientType patientType) {
    this.patientType = patientType;
  }

  public Prescription medicalHistory(String medicalHistory) {
    this.medicalHistory = medicalHistory;
    return this;
  }

   /**
   * detailed medical history of the patient 
   * @return medicalHistory
  **/
  @ApiModelProperty(value = "detailed medical history of the patient ")
  public String getMedicalHistory() {
    return medicalHistory;
  }

  public void setMedicalHistory(String medicalHistory) {
    this.medicalHistory = medicalHistory;
  }

  public Prescription diseaseSymptoms(String diseaseSymptoms) {
    this.diseaseSymptoms = diseaseSymptoms;
    return this;
  }

   /**
   * details about the disease and the symptoms 
   * @return diseaseSymptoms
  **/
  @ApiModelProperty(value = "details about the disease and the symptoms ")
  public String getDiseaseSymptoms() {
    return diseaseSymptoms;
  }

  public void setDiseaseSymptoms(String diseaseSymptoms) {
    this.diseaseSymptoms = diseaseSymptoms;
  }

  public Prescription clinicalFindings(String clinicalFindings) {
    this.clinicalFindings = clinicalFindings;
    return this;
  }

   /**
   * clinical findings from the lab report, if provided 
   * @return clinicalFindings
  **/
  @ApiModelProperty(value = "clinical findings from the lab report, if provided ")
  public String getClinicalFindings() {
    return clinicalFindings;
  }

  public void setClinicalFindings(String clinicalFindings) {
    this.clinicalFindings = clinicalFindings;
  }

  public Prescription diagnosis(String diagnosis) {
    this.diagnosis = diagnosis;
    return this;
  }

   /**
   * diagnosis of the disease 
   * @return diagnosis
  **/
  @ApiModelProperty(value = "diagnosis of the disease ")
  public String getDiagnosis() {
    return diagnosis;
  }

  public void setDiagnosis(String diagnosis) {
    this.diagnosis = diagnosis;
  }

  public Prescription notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * small notes while prescribing 
   * @return notes
  **/
  @ApiModelProperty(value = "small notes while prescribing ")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public Prescription conductedProcedure(String conductedProcedure) {
    this.conductedProcedure = conductedProcedure;
    return this;
  }

   /**
   * procedure followed while diagnosing the patient, if possible 
   * @return conductedProcedure
  **/
  @ApiModelProperty(value = "procedure followed while diagnosing the patient, if possible ")
  public String getConductedProcedure() {
    return conductedProcedure;
  }

  public void setConductedProcedure(String conductedProcedure) {
    this.conductedProcedure = conductedProcedure;
  }

  public Prescription medicines(List<MedicineDetails> medicines) {
    this.medicines = medicines;
    return this;
  }

  public Prescription addMedicinesItem(MedicineDetails medicinesItem) {
    if (this.medicines == null) {
      this.medicines = new ArrayList<>();
    }
    this.medicines.add(medicinesItem);
    return this;
  }

   /**
   * Get medicines
   * @return medicines
  **/
  @ApiModelProperty(value = "")
  public List<MedicineDetails> getMedicines() {
    return medicines;
  }

  public void setMedicines(List<MedicineDetails> medicines) {
    this.medicines = medicines;
  }

  public Prescription prescribedLabTest(String prescribedLabTest) {
    this.prescribedLabTest = prescribedLabTest;
    return this;
  }

   /**
   * list of lab test(s) to be done 
   * @return prescribedLabTest
  **/
  @ApiModelProperty(value = "list of lab test(s) to be done ")
  public String getPrescribedLabTest() {
    return prescribedLabTest;
  }

  public void setPrescribedLabTest(String prescribedLabTest) {
    this.prescribedLabTest = prescribedLabTest;
  }

  public Prescription adviceGiven(String adviceGiven) {
    this.adviceGiven = adviceGiven;
    return this;
  }

   /**
   * any advice given by doctor to the patient to follow 
   * @return adviceGiven
  **/
  @ApiModelProperty(value = "any advice given by doctor to the patient to follow ")
  public String getAdviceGiven() {
    return adviceGiven;
  }

  public void setAdviceGiven(String adviceGiven) {
    this.adviceGiven = adviceGiven;
  }

  public Prescription followUpDate(String followUpDate) {
    this.followUpDate = followUpDate;
    return this;
  }

   /**
   * follow up date if required 
   * @return followUpDate
  **/
  @ApiModelProperty(value = "follow up date if required ")
  public String getFollowUpDate() {
    return followUpDate;
  }

  public void setFollowUpDate(String followUpDate) {
    this.followUpDate = followUpDate;
  }

  public Prescription prescription(byte[] prescription) {
    this.prescription = prescription;
    return this;
  }

   /**
   * pdf version of the prescription 
   * @return prescription
  **/
  @ApiModelProperty(value = "pdf version of the prescription ")
  public byte[] getPrescription() {
    return prescription;
  }

  public void setPrescription(byte[] prescription) {
    this.prescription = prescription;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Prescription prescription = (Prescription) o;
    return Objects.equals(this.id, prescription.id) &&
        Objects.equals(this.relatedPrescriptions, prescription.relatedPrescriptions) &&
        Objects.equals(this.doctorId, prescription.doctorId) &&
        Objects.equals(this.patient, prescription.patient) &&
        Objects.equals(this.departmentId, prescription.departmentId) &&
        Objects.equals(this.hospitalId, prescription.hospitalId) &&
        Objects.equals(this.referredBy, prescription.referredBy) &&
        Objects.equals(this.patientType, prescription.patientType) &&
        Objects.equals(this.medicalHistory, prescription.medicalHistory) &&
        Objects.equals(this.diseaseSymptoms, prescription.diseaseSymptoms) &&
        Objects.equals(this.clinicalFindings, prescription.clinicalFindings) &&
        Objects.equals(this.diagnosis, prescription.diagnosis) &&
        Objects.equals(this.notes, prescription.notes) &&
        Objects.equals(this.conductedProcedure, prescription.conductedProcedure) &&
        Objects.equals(this.medicines, prescription.medicines) &&
        Objects.equals(this.prescribedLabTest, prescription.prescribedLabTest) &&
        Objects.equals(this.adviceGiven, prescription.adviceGiven) &&
        Objects.equals(this.followUpDate, prescription.followUpDate) &&
        Arrays.equals(this.prescription, prescription.prescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, relatedPrescriptions, doctorId, patient, departmentId, hospitalId, referredBy, patientType, medicalHistory, diseaseSymptoms, clinicalFindings, diagnosis, notes, conductedProcedure, medicines, prescribedLabTest, adviceGiven, followUpDate, Arrays.hashCode(prescription));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Prescription {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    relatedPrescriptions: ").append(toIndentedString(relatedPrescriptions)).append("\n");
    sb.append("    doctorId: ").append(toIndentedString(doctorId)).append("\n");
    sb.append("    patient: ").append(toIndentedString(patient)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    hospitalId: ").append(toIndentedString(hospitalId)).append("\n");
    sb.append("    referredBy: ").append(toIndentedString(referredBy)).append("\n");
    sb.append("    patientType: ").append(toIndentedString(patientType)).append("\n");
    sb.append("    medicalHistory: ").append(toIndentedString(medicalHistory)).append("\n");
    sb.append("    diseaseSymptoms: ").append(toIndentedString(diseaseSymptoms)).append("\n");
    sb.append("    clinicalFindings: ").append(toIndentedString(clinicalFindings)).append("\n");
    sb.append("    diagnosis: ").append(toIndentedString(diagnosis)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    conductedProcedure: ").append(toIndentedString(conductedProcedure)).append("\n");
    sb.append("    medicines: ").append(toIndentedString(medicines)).append("\n");
    sb.append("    prescribedLabTest: ").append(toIndentedString(prescribedLabTest)).append("\n");
    sb.append("    adviceGiven: ").append(toIndentedString(adviceGiven)).append("\n");
    sb.append("    followUpDate: ").append(toIndentedString(followUpDate)).append("\n");
    sb.append("    prescription: ").append(toIndentedString(prescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


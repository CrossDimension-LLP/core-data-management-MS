/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package in.octosolutions.coreDataManagement.ms.ck.resource.coreData.api;

import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.invoker.ApiException;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.Department;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.Error;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.PatchElement;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DepartmentManagementApi
 */
@Ignore
public class DepartmentManagementApiTest {

    private final DepartmentManagementApi api = new DepartmentManagementApi();

    
    /**
     * Department Deletion by filter
     *
     * delete Department
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDepartmentTest() throws ApiException {
        List<String> filters = null;
        Department response = api.deleteDepartment(filters);

        // TODO: test validations
    }
    
    /**
     * List of Departments available
     *
     * Produces List of Departments available
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDepartmentTest() throws ApiException {
        List<String> filters = null;
        Department response = api.getDepartment(filters);

        // TODO: test validations
    }
    
    /**
     * Insertion of Department
     *
     * Creates New entry of a Department
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveDepartmentTest() throws ApiException {
        Department departmentInput = null;
        Department response = api.saveDepartment(departmentInput);

        // TODO: test validations
    }
    
    /**
     * Department Updation by filter
     *
     * Produces List of Departments
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDepartmentTest() throws ApiException {
        PatchElement patchElement = null;
        List<String> filters = null;
        Department response = api.updateDepartment(patchElement, filters);

        // TODO: test validations
    }
    
}

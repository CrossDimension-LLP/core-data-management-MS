/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package in.octosolutions.coreDataManagement.ms.ck.resource.coreData.api;

import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.invoker.ApiException;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.Doctor;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.Error;
import in.octosolutions.coreDataManagement.ms.ck.resource.coreData.model.PatchElement;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DoctorManagementApi
 */
@Ignore
public class DoctorManagementApiTest {

    private final DoctorManagementApi api = new DoctorManagementApi();

    
    /**
     * Doctor Deletion by filter
     *
     * delete Doctor
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDoctorsTest() throws ApiException {
        List<String> filters = null;
        Doctor response = api.deleteDoctors(filters);

        // TODO: test validations
    }
    
    /**
     * List of Doctors available
     *
     * Produces List of Doctors available
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDoctorsTest() throws ApiException {
        List<String> filters = null;
        Doctor response = api.getDoctors(filters);

        // TODO: test validations
    }
    
    /**
     * Insertion of doctor
     *
     * Creates New entry of a doctor
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveDoctorTest() throws ApiException {
        Doctor doctorInput = null;
        Doctor response = api.saveDoctor(doctorInput);

        // TODO: test validations
    }
    
    /**
     * Doctor Updation by filter
     *
     * Produces List of Doctors
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDoctorTest() throws ApiException {
        PatchElement patchElement = null;
        List<String> filters = null;
        Doctor response = api.updateDoctor(patchElement, filters);

        // TODO: test validations
    }
    
}
